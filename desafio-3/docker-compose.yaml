version: "3"

services:
  mysqldb:
    image: mysql:5.7
    networks:
      - mysqldb
    container_name: mysql
    restart: always
    environment:
      MYSQL_USER: myuser
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: orders
      MYSQL_PASSWORD: root
    ports:
      - 3306:3306
    volumes:
      - ./mysqldata:/var/lib/mysql
      - ./internal/infra/database/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
      interval: 10s
      timeout: 3s
      retries: 5

  migrate:
    image: migrate/migrate
    networks:
      - default
      - mysqldb
    volumes:
      - ./internal/infra/database/migrations:/migrations
    command: "-path=/migrations -database 'mysql://root:root@tcp(mysqldb:3306)/orders' up"
    depends_on:
      mysqldb:
        condition: service_healthy

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  app:
    build:
      context: .  # Diretório atual
    ports:
      - "8080:8080"  # Mapeie a porta 8080 do contêiner para a porta 8080 do host
    volumes:
      - .:/app  # Para atualizar o código sem recriar o contêiner (opcional)
    command: ["./main"]  # Comando para rodar o aplicativo
    depends_on:
      migrate:
        condition: service_healthy      
# volumes:
#   mysqldata:
networks:
  mysqldb:
